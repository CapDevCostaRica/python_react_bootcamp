"""Initial migration for shipments

Revision ID: e4d3f86d19e1
Revises: 
Create Date: 2025-09-09 06:40:07.323064

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4d3f86d19e1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('global_manager', 'store_manager', 'warehouse_staff', 'carrier', name='user_roles'), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('shipments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_warehouse_id', sa.Integer(), nullable=False),
    sa.Column('destination_warehouse_id', sa.Integer(), nullable=False),
    sa.Column('assigned_carrier_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('created', 'in_transit', 'delivered', name='shipment_statuses'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('in_transit_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('in_transit_by_id', sa.Integer(), nullable=True),
    sa.Column('delivered_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_carrier_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delivered_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['destination_warehouse_id'], ['warehouses.id'], ),
    sa.ForeignKeyConstraint(['in_transit_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['origin_warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('noted_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('alembic_version')
    op.drop_table('castroulloaaaron_allmonsters')
    op.drop_table('monsters_crisarias')
    op.drop_table('randymorales_monster_list_cache')
    op.drop_table('alfonsovso_monsters')
    op.drop_table('randymorales_monster_cache')
    op.drop_table('motivational_phrases')
    op.drop_table('kevinWalshMunozMonsters')
    op.drop_table('monster_majocr')
    op.drop_table('monsters_danrodjim')
    op.drop_table('monster_list_majocr')
    op.drop_table('randallbrenes_dnd_monsters')
    op.drop_table('kevinWalshMunozMonster')
    op.drop_table('monsters_list_crisarias')
    op.drop_table('alfonsovso_monsters_index')
    op.drop_table('castroulloaaaron_monsters')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('castroulloaaaron_monsters',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('json_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('castroulloaaaron_monsters_pkey'))
    )
    op.create_table('alfonsovso_monsters_index',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('index', name=op.f('alfonsovso_monsters_index_pkey'))
    )
    op.create_table('monsters_list_crisarias',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('index', name=op.f('monsters_list_crisarias_pkey'))
    )
    op.create_table('kevinWalshMunozMonster',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('index', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('size', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('alignment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('armor_class', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('hit_points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hit_dice', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hit_points_roll', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('speed', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('strength', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dexterity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('constitution', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('intelligence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wisdom', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('charisma', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proficiencies', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('damage_vulnerabilities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('damage_resistances', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('damage_immunities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('condition_immunities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('senses', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('languages', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('challenge_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proficiency_bonus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('xp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('special_abilities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('legendary_actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('reactions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('forms', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('kevinWalshMunozMonster_pkey')),
    sa.UniqueConstraint('index', name=op.f('kevinWalshMunozMonster_index_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('randallbrenes_dnd_monsters',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('json_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('index', name=op.f('randallbrenes_dnd_monsters_pkey'))
    )
    op.create_table('monster_list_majocr',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('index', name=op.f('monster_list_majocr_pkey'))
    )
    op.create_table('monsters_danrodjim',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('monsters_danrodjim_pkey')),
    sa.UniqueConstraint('index', name=op.f('monsters_danrodjim_index_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('name', name=op.f('monsters_danrodjim_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('url', name=op.f('monsters_danrodjim_url_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('monster_majocr',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('index', name=op.f('monster_majocr_pkey'))
    )
    op.create_table('kevinWalshMunozMonsters',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('index', name=op.f('kevinWalshMunozMonsters_pkey'))
    )
    op.create_table('motivational_phrases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phrase', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('motivational_phrases_pkey'))
    )
    op.create_table('randymorales_monster_cache',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('monster_index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('monster_data', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('randymorales_monster_cache_pkey')),
    sa.UniqueConstraint('monster_index', name=op.f('randymorales_monster_cache_monster_index_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('alfonsovso_monsters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('alfonsovso_monsters_pkey')),
    sa.UniqueConstraint('index', name=op.f('alfonsovso_monsters_index_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('randymorales_monster_list_cache',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('resource', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('list_data', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('randymorales_monster_list_cache_pkey')),
    sa.UniqueConstraint('resource', name=op.f('randymorales_monster_list_cache_resource_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('monsters_crisarias',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('body', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('index', name=op.f('monsters_crisarias_pkey'))
    )
    op.create_table('castroulloaaaron_allmonsters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('json_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('castroulloaaaron_allmonsters_pkey'))
    )
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.drop_table('shipment_locations')
    op.drop_table('shipments')
    op.drop_table('users')
    op.drop_table('warehouses')
    # ### end Alembic commands ###
