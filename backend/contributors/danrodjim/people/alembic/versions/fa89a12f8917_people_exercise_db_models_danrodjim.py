"""People exercise db models Danrodjim

Revision ID: fa89a12f8917
Revises: 
Create Date: 2025-08-29 15:32:15.260791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa89a12f8917'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('eye_color', sa.String(), nullable=False),
    sa.Column('hair_color', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('height_cm', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Integer(), nullable=False),
    sa.Column('nationality', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('relation', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hobbies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('degree', sa.String(), nullable=False),
    sa.Column('institution', sa.String(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('motivational_phrases')
    op.drop_table('kevinWalshMunozMonsters')
    op.drop_table('randallbrenes_dnd_monsters')
    op.drop_table('castroulloaaaron_allmonsters')
    op.drop_table('castroulloaaaron_monsters')
    op.drop_table('alembic_version')
    op.drop_table('monsters_danrodjim')
    op.drop_table('monster_list_majocr')
    op.drop_table('monster_majocr')
    op.drop_table('kevinWalshMunozMonster')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kevinWalshMunozMonster',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('index', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('size', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('alignment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('armor_class', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('hit_points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hit_dice', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hit_points_roll', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('speed', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('strength', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dexterity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('constitution', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('intelligence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wisdom', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('charisma', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proficiencies', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('damage_vulnerabilities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('damage_resistances', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('damage_immunities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('condition_immunities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('senses', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('languages', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('challenge_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proficiency_bonus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('xp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('special_abilities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('legendary_actions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('reactions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('forms', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('kevinWalshMunozMonster_pkey')),
    sa.UniqueConstraint('index', name=op.f('kevinWalshMunozMonster_index_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('monster_majocr',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('index', name=op.f('monster_majocr_pkey'))
    )
    op.create_table('monster_list_majocr',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('index', name=op.f('monster_list_majocr_pkey'))
    )
    op.create_table('monsters_danrodjim',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('monsters_danrodjim_pkey')),
    sa.UniqueConstraint('index', name=op.f('monsters_danrodjim_index_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('name', name=op.f('monsters_danrodjim_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('url', name=op.f('monsters_danrodjim_url_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.create_table('castroulloaaaron_monsters',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('json_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('castroulloaaaron_monsters_pkey'))
    )
    op.create_table('castroulloaaaron_allmonsters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('json_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('castroulloaaaron_allmonsters_pkey'))
    )
    op.create_table('randallbrenes_dnd_monsters',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('json_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('index', name=op.f('randallbrenes_dnd_monsters_pkey'))
    )
    op.create_table('kevinWalshMunozMonsters',
    sa.Column('index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('index', name=op.f('kevinWalshMunozMonsters_pkey'))
    )
    op.create_table('motivational_phrases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phrase', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('motivational_phrases_pkey'))
    )
    op.drop_table('studies')
    op.drop_table('hobbies')
    op.drop_table('foods')
    op.drop_table('family')
    op.drop_table('persons')
    # ### end Alembic commands ###
