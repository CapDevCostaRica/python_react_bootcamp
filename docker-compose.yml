services:
  flask_app:
    build: 
      context: ./backend
      args:
        APPLICATION_FOLDER: ${APPLICATION_FOLDER}
    env_file:
      - ./.env
    ports:
      - "4000:4000"    
    command: bash /app/run_local.sh
    restart: unless-stopped
    volumes:
      - ./backend:/app
    depends_on:
      - flask_db
    networks: [local-dev]        
  
  flask_db:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST: flask_db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres      
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks: [local-dev]
    
  localstack:
    image: localstack/localstack:3
    networks: [local-dev]
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - DEBUG=1
      - SERVICES=lambda,apigateway,apigatewayv2,logs,iam,sts,cloudwatch,s3
      - AWS_DEFAULT_REGION=us-east-1
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_DOCKER_NETWORK=local-dev
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    profiles: [localstack]

volumes:
  pgdata: {}

networks:
  local-dev:
    name: local-dev
    driver: bridge